# All configuration for plugins and other utils is defined here.
# Read more about `setup.cfg`:
# https://docs.python.org/3/distutils/configfile.html


# === Linter configuration ===

[flake8]
# flake8 configuration:
# https://flake8.pycqa.org/en/latest/user/configuration.html
# Print the source code generating the error/warning
show-source = false
# Count the number of occurrences of each error/warning code and print a report
statistics = true
# Enable PyFlakes syntax checking of doctests in docstrings
doctests = true
# Set the maximum allowed McCabe complexity value for a block of code
max-complexity = 7
# Set the maximum length that any line
max-line-length = 140
# Suppress ANN200-level errors for functions that contains no `return` statement or all of them return `None`
suppress-none-returning = true
# Suppress ANN000-level errors for dummy arguments, defined as `_`
suppress-dummy-args = true

# A list of codes to add to the list of ignored ones
extend-ignore =
    # Missing type annotation for *args
    ANN002,
    # Missing type annotation for **kwargs
    ANN003,
    # Missing type annotation for self in method
    ANN101,
    # Missing type annotation for cls in classmethod
    ANN102,

# A list of codes that should be ignored for the  entirety of the file
per-file-ignores =
  # F401: Module imported but not used
  # F403: Star imports; unable to detect undefined names
  __init__.py: F401, F403,
  # E501: Line is too long
  response.py: E501

# Excluding some directories:
exclude =
  .git,
  __pycache__,
  venv,
  .venv,
  .idea,
  # These folders contain code badly written for reasons:
  tests/


[darglint2]
# darglint configuration:
# https://pypi.org/project/darglint2/#configuration
strictness = long
# There is a known issue with darglintâ€™s performance when using `google` or `numpy` documentation style
# https://github.com/terrencepreilly/darglint/issues/186
docstring-style = sphinx


[isort]
# isort configuration:
# https://pycqa.github.io/isort/docs/configuration/options.html
# Forces all from imports to appear on their own line
force_single_line = false
# If `True` isort will automatically create section groups by the top-level package they come from
group_by_package = true
# Includes a trailing comma on multi line imports that include parentheses
include_trailing_comma = true
# Use parentheses for line continuation on length limit instead of backslashes
use_parentheses = true
# The number of blank lines to place after imports
lines_after_imports = 2
# Multi line output
multi_line_output = 3
# The number of lines to place between direct and from imports
lines_between_types = 1
# Lexicographical order is strictly alphabetical order
lexicographical = true
